// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebShoeTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
<<<<<<<< HEAD:WebShoeTest/Migrations/20250310041153_InitialCreate.Designer.cs
    [Migration("20250310041153_InitialCreate")]
========
    [Migration("20250310041252_InitialCreate")]
>>>>>>>> fec345e6eb8ea03900ea1b7743161cd1aa9b58a1:WebShoeTest/Migrations/20250310041252_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.BaoHanh", b =>
                {
                    b.Property<int>("MaBaoHanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBaoHanh"));

                    b.Property<int>("DonHangMaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThoiGianBaoHanh")
                        .HasColumnType("int");

                    b.HasKey("MaBaoHanh");

                    b.HasIndex("DonHangMaDonHang");

                    b.HasIndex("MaGiay");

                    b.ToTable("BaoHanhs");
                });

            modelBuilder.Entity("WebShoeTest.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDonHang"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaGiay");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.ChinhSachHoanTra", b =>
                {
                    b.Property<int>("MaHoanTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoanTra"));

                    b.Property<int>("DonHangMaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("GiayMaGiay")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHoanTra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHoanTra");

                    b.HasIndex("DonHangMaDonHang");

                    b.HasIndex("GiayMaGiay");

                    b.ToTable("ChinhSachHoanTras");
                });

            modelBuilder.Entity("WebShoeTest.Models.DanhGia", b =>
                {
                    b.Property<int>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGia"));

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SoSao")
                        .HasColumnType("real");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaGiay");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DanhGias");
                });

            modelBuilder.Entity("WebShoeTest.Models.DanhMuc", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"));

                    b.Property<string>("PhongCach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMucs");
                });

            modelBuilder.Entity("WebShoeTest.Models.Giay", b =>
                {
                    b.Property<int>("MaGiay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGiay"));

                    b.Property<float>("DanhGia")
                        .HasColumnType("real");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("KichThuoc")
                        .HasColumnType("int");

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<int>("MaThuongHieu")
                        .HasColumnType("int");

                    b.Property<string>("MauSac")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaGiay");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaThuongHieu");

                    b.ToTable("Giays");
                });

            modelBuilder.Entity("WebShoeTest.Models.HinhAnh", b =>
                {
                    b.Property<int>("MaHinhAnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnh"));

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.HasKey("MaHinhAnh");

                    b.HasIndex("MaGiay");

                    b.ToTable("HinhAnhs");
                });

            modelBuilder.Entity("WebShoeTest.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhachHang"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.KhoHang", b =>
                {
                    b.Property<int>("MaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKho"));

                    b.Property<int>("MaGiay")
                        .HasColumnType("int");

                    b.Property<int>("MaNhaCungCap")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKho");

                    b.HasIndex("MaGiay");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("KhoHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.NhaCungCap", b =>
                {
                    b.Property<int>("MaNhaCungCap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaCungCap"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaXuatXu")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNhaCungCap");

                    b.HasIndex("MaXuatXu");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("WebShoeTest.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhanVien"));

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("WebShoeTest.Models.ThanhToan", b =>
                {
                    b.Property<int>("MaThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThanhToan"));

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaThanhToan");

                    b.HasIndex("MaDonHang")
                        .IsUnique();

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("WebShoeTest.Models.ThuongHieu", b =>
                {
                    b.Property<int>("MaThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThuongHieu"));

                    b.Property<int>("MaXuatXu")
                        .HasColumnType("int");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaThuongHieu");

                    b.HasIndex("MaXuatXu");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("WebShoeTest.Models.XuatXu", b =>
                {
                    b.Property<int>("MaXuatXu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaXuatXu"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaBuuChinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenXuatXu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaXuatXu");

                    b.ToTable("XuatXus");
                });

            modelBuilder.Entity("DonHang", b =>
                {
                    b.HasOne("WebShoeTest.Models.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.NhanVien", "NhanVien")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNhanVien");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebShoeTest.Models.BaoHanh", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangMaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany("BaoHanhs")
                        .HasForeignKey("MaGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Giay");
                });

            modelBuilder.Entity("WebShoeTest.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Giay");
                });

            modelBuilder.Entity("WebShoeTest.Models.ChinhSachHoanTra", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangMaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany()
                        .HasForeignKey("GiayMaGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Giay");
                });

            modelBuilder.Entity("WebShoeTest.Models.DanhGia", b =>
                {
                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.KhachHang", "KhachHang")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giay");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("WebShoeTest.Models.Giay", b =>
                {
                    b.HasOne("WebShoeTest.Models.DanhMuc", "DanhMuc")
                        .WithMany("Giays")
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("Giays")
                        .HasForeignKey("MaThuongHieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("WebShoeTest.Models.HinhAnh", b =>
                {
                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("MaGiay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giay");
                });

            modelBuilder.Entity("WebShoeTest.Models.KhoHang", b =>
                {
                    b.HasOne("WebShoeTest.Models.Giay", "Giay")
                        .WithMany("KhoHangs")
                        .HasForeignKey("MaGiay")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("KhoHangs")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebShoeTest.Models.NhanVien", "NhanVien")
                        .WithMany("KhoHangs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giay");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebShoeTest.Models.NhaCungCap", b =>
                {
                    b.HasOne("WebShoeTest.Models.XuatXu", "XuatXu")
                        .WithMany("NhaCungCaps")
                        .HasForeignKey("MaXuatXu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("XuatXu");
                });

            modelBuilder.Entity("WebShoeTest.Models.ThanhToan", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithOne("ThanhToan")
                        .HasForeignKey("WebShoeTest.Models.ThanhToan", "MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("WebShoeTest.Models.ThuongHieu", b =>
                {
                    b.HasOne("WebShoeTest.Models.XuatXu", "XuatXu")
                        .WithMany("ThuongHieus")
                        .HasForeignKey("MaXuatXu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("XuatXu");
                });

            modelBuilder.Entity("DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ThanhToan")
                        .IsRequired();
                });

            modelBuilder.Entity("WebShoeTest.Models.DanhMuc", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("WebShoeTest.Models.Giay", b =>
                {
                    b.Navigation("BaoHanhs");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("DanhGias");

                    b.Navigation("HinhAnhs");

                    b.Navigation("KhoHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.KhachHang", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.NhaCungCap", b =>
                {
                    b.Navigation("KhoHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.NhanVien", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("KhoHangs");
                });

            modelBuilder.Entity("WebShoeTest.Models.ThuongHieu", b =>
                {
                    b.Navigation("Giays");
                });

            modelBuilder.Entity("WebShoeTest.Models.XuatXu", b =>
                {
                    b.Navigation("NhaCungCaps");

                    b.Navigation("ThuongHieus");
                });
#pragma warning restore 612, 618
        }
    }
}
