@model ShoeShop.Models.Product

@{
	ViewData["Title"] = "Thêm sản phẩm mới";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var sizes = ViewData["Sizes"] as List<ShoeShop.Models.Size>;
}

<div class="container-fluid pt-4 px-4">
	<div class="bg-light rounded p-4">
		<div class="d-flex align-items-center justify-content-between mb-4">
			<h3 class="mb-0">@ViewData["Title"]</h3>
			<a asp-action="Index" class="btn btn-secondary">
				<i class="fa fa-arrow-left me-2"></i>Quay lại
			</a>
		</div>

		@if (!ViewData.ModelState.IsValid)
		{
			<div class="alert alert-danger">
				<ul>
					@foreach (var key in ViewData.ModelState.Keys)
					{
						foreach (var error in ViewData.ModelState[key].Errors)
						{
							<li>@error.ErrorMessage</li>
						}
					}
				</ul>
			</div>
		}


		@* @if (!ViewData.ModelState.IsValid) *@
		@* { *@
		@* 	<div class="alert alert-danger"> *@
		@* 		<ul> *@
		@* 			@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors)) *@
		@* 			{ *@
		@* 				<li>@error.ErrorMessage</li> *@
		@* 			} *@
		@* 		</ul> *@
		@* 	</div> *@
		@* } *@

		<form asp-action="Create" method="post" enctype="multipart/form-data">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>

			<div class="row">
				<div class="col-md-8">
					<div class="card mb-4">
						<div class="card-header">
							<h5 class="mb-0">Thông tin cơ bản</h5>
						</div>
						<div class="card-body">
							<div class="mb-3">
								<label asp-for="ProductName" class="form-label">Tên sản phẩm</label>
								<input asp-for="ProductName" id="ProductName" class="form-control" required />

								@* <input asp-for="ProductName" class="form-control" required /> *@
								<span asp-validation-for="ProductName" class="text-danger"></span>
							</div>

							<div class="mb-3">
								<label asp-for="CategoryID" class="form-label">Danh mục</label>
								<select asp-for="CategoryID" name="CategoryID" class="form-select" asp-items="ViewBag.CategoryID" required>
									<option value="">-- Chọn danh mục --</option>
								</select>
								<span asp-validation-for="CategoryID" class="text-danger"></span>
							</div>

							<div class="mb-3">
								<label asp-for="Price" class="form-label">Giá</label>
								<input asp-for="Price" class="form-control" type="number" min="0" step="0.01" required />
								<span asp-validation-for="Price" class="text-danger"></span>
							</div>

							<div class="mb-3">
								<label asp-for="Description" class="form-label">Mô tả</label>
								<textarea asp-for="Description" class="form-control" rows="5"></textarea>
								<span asp-validation-for="Description" class="text-danger"></span>
							</div>
						</div>
					</div>

					<div class="card mb-4">
						<div class="card-header">
							<h5 class="mb-0">Kích cỡ và số lượng</h5>
						</div>
						<div class="card-body">
							<div class="table-responsive">
								<table class="table table-bordered">
									<thead>
										<tr>
											<th>Kích cỡ</th>
											<th>Số lượng</th>
										</tr>
									</thead>
									<tbody>
										@if (sizes != null)
										{
											for (int i = 0; i < sizes.Count; i++)
											{
												<tr>
													<td>
														<div class="form-check">
															<input type="checkbox" id="size_@sizes[i].SizeID" name="selectedSizes[]" value="@sizes[i].SizeID" class="form-check-input size-checkbox" />
															<label class="form-check-label" for="size_@sizes[i].SizeID">@sizes[i].SizeName</label>
														</div>
													</td>
													<td>
														<input type="number" name="stockQuantities[]" class="form-control stock-input" min="1" value="1" required />

														@* <input type="number" name="stockQuantities" class="form-control stock-input" min="0" value="0" /> *@
													</td>
												</tr>
											}
										}
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>

				<div class="col-md-4">
					<div class="card mb-4">
						<div class="card-header">
							<h5 class="mb-0">Hình ảnh sản phẩm</h5>
						</div>
						<div class="card-body">
							<div class="mb-3">
								<label for="imageFiles" class="form-label">Hình ảnh</label>
								<input type="file" id="imageFiles" name="imageFiles" class="form-control" multiple accept="image/*" required />
								<div class="form-text">Có thể chọn nhiều hình ảnh. Hình ảnh đầu tiên sẽ là hình ảnh chính.</div>
							</div>
							<div id="imagePreview" class="row mt-3">
								<!-- Image previews will be shown here -->
							</div>
						</div>
					</div>

					<div class="d-grid">
						<button type="submit" class="btn btn-primary" id="submitBtn">
							<i class="fa fa-save me-2"></i>Lưu sản phẩm
						</button>
					</div>
				</div>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		// Image preview functionality
		document.querySelector('input[type="file"]').addEventListener('change', function (e) {
			const imagePreview = document.getElementById('imagePreview');
			imagePreview.innerHTML = '';

			if (this.files) {
				for (let i = 0; i < this.files.length; i++) {
					const file = this.files[i];
					if (file.type.match('image.*')) {
						const reader = new FileReader();
						reader.onload = function (e) {
							const div = document.createElement('div');
							div.className = 'col-6 mb-2';
							div.innerHTML = `
								<div class="card">
									<img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
									${i === 0 ? '<div class="card-footer p-1 text-center"><span class="badge bg-primary">Ảnh chính</span></div>' : ''}
								</div>
							`;
							imagePreview.appendChild(div);
						}
						reader.readAsDataURL(file);
					}
				}
			}
		});

		// Validate form before submission
		document.getElementById('submitBtn').addEventListener('click', function(e) {
			const productName = document.getElementById('ProductName').value;
			const categoryID = document.getElementById('CategoryID').value;
			const price = document.getElementById('Price').value;

			let isValid = true;
			let errorMessage = '';

			if (!productName) {
				errorMessage += 'Vui lòng nhập tên sản phẩm\n';
				isValid = false;
			}

			if (!categoryID) {
				errorMessage += 'Vui lòng chọn danh mục\n';
				isValid = false;
			}

			if (!price || parseFloat(price) <= 0) {
				errorMessage += 'Vui lòng nhập giá hợp lệ\n';
				isValid = false;
			}

		   const sizeCheckboxes = document.querySelectorAll('.size-checkbox:checked');
			if (sizeCheckboxes.length === 0) {
				errorMessage += 'Vui lòng chọn ít nhất một kích cỡ\n';
				isValid = false;
			}

			sizeCheckboxes.forEach((checkbox) => {
				const row = checkbox.closest('tr'); // Lấy hàng chứa checkbox
				const stockInput = row.querySelector('.stock-input'); // Lấy ô nhập số lượng
				const stockValue = parseInt(stockInput.value, 10);

				if (!stockValue || stockValue <= 0) {
					errorMessage += `Vui lòng nhập số lượng hợp lệ cho kích cỡ ${checkbox.nextElementSibling.textContent.trim()}\n`;
					isValid = false;
				}
			});


			// Kiểm tra nếu có kích cỡ được chọn thì phải có số lượng
			// const sizeCheckboxes = document.querySelectorAll('.size-checkbox:checked');
			// const stockInputs = document.querySelectorAll('.stock-input');

			// for (let i = 0; i < sizeCheckboxes.length; i++) {
			//     const stockValue = parseInt(stockInputs[i].value);
			//     if (sizeCheckboxes[i].checked && (!stockValue || stockValue <= 0)) {
			//         errorMessage += 'Vui lòng nhập số lượng cho các kích cỡ đã chọn\n';
			//         isValid = false;
			//         break;
			//     }
			// }

			// if (!isValid) {
			//     alert(errorMessage);
			//     e.preventDefault();
			// }
		});
	</script>
}